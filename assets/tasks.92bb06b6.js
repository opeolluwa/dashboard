import{u as n,E as i,G as c,b as r}from"./index.001cb359.js";const t=n(),d=i(),a=d.getAuthToken,g=c("todoStore",{state:()=>({todoArray:null,noOfRows:10,pageIndex:1,isLoading:!1,isFetchingTodoArray:!1,errorFetchingTodo:!1,errorMessage:""}),getters:{getAllTodo:e=>e.todoArray},actions:{async fetchAllTodo(){this.isFetchingTodoArray=!0;try{const{data:e}=await r.get("/todo",{headers:{Authorization:`Bearer ${a}`}});this.todoArray=e.data.todo,this.noOfRows=e.data.noOfRows,this.pageIndex=e.DataTransfer.CurrentPage,this.isFetchingTodoArray=!1,console.log(JSON.stringify(e))}catch{this.isFetchingTodoArray=!1}},async createTodo(e){i(),this.isLoading=!0;try{const s=e.priority.split(" ").join("-")||e.priority,{data:o}=await r.post("/todo",{...e,priority:s},{headers:{Authorization:`Bearer ${a}`}});return o.success?(this.fetchAllTodo(),this.isLoading=!1,e.title="",e.description="",t.success(o.message),!0):!1}catch(s){this.errorFetchingTodo=!0,this.isLoading=!1;const{data:o}=s.response;o.success||t.error(o.message)}return this.isLoading=!1,!1},async deleteTodo(e){try{const{data:s}=await r.delete(`/todo/${e}`,{headers:{Authorization:`Bearer ${a}`}});s.success&&(this.fetchAllTodo(),t.success(s.message)),console.log("the todo id is ",e),console.log(JSON.stringify(s))}catch(s){const{data:o}=s.response;o.success||t.error(o.message)}}}});export{g as u};
