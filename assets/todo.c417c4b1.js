import{z as s,A as a,b as e}from"./index.5e103bfb.js";const n=s(),r=n.getAuthToken,c=a("todoStore",{state:()=>({todoArray:null,noOfRows:10,pageIndex:1,isLoading:!1,isFetchingTodoArray:!1,errorFetchingTodo:!1,errorMessage:""}),getters:{getAllTodo:o=>o.todoArray},actions:{async fetchAllTodo(){this.isFetchingTodoArray=!0;try{const{data:o}=await e.get("/todo",{headers:{Authorization:`Bearer ${r}`}});this.todoArray=o.data.todo,this.noOfRows=o.data.noOfRows,this.pageIndex=o.DataTransfer.CurrentPage,this.isFetchingTodoArray=!1,console.log(JSON.stringify(o))}catch{this.isFetchingTodoArray=!1}},async createTodo(o){s(),this.isLoading=!0;try{const t=o.priority.split(" ").join("-")||o.priority,{data:i}=await e.post("/todo",{...o,priority:t},{headers:{Authorization:`Bearer ${r}`}});return i.success?(this.fetchAllTodo(),this.isLoading=!1,o.title="",o.description="",!0):!1}catch{this.errorFetchingTodo=!0,this.isLoading=!1}return this.isLoading=!1,!1},async deleteTodo(o){try{const{data:t}=await e.delete(`/todo/${o}`,{headers:{Authorization:`Bearer ${r}`}});t.success&&this.fetchAllTodo(),console.log("the todo id is ",o),console.log(JSON.stringify(t))}catch{}}}});export{c as u};
